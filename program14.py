# -*- coding: utf-8 -*-
"""Program14.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F1CPLPRXE4wVWZp1k04VdfxQC60WWQ30
"""

import pandas as pd
df=pd.read_csv('/content/Wine_Quality.csv')
print(df.head())
print(df.isnull().sum())
print(df.describe())
print(df['quality'].value_counts())

import matplotlib.pyplot as plt
import seaborn as sns
plt.figure(figsize=(8,6))
df['alcohol'].hist(bins=30)
plt.title("Histogram of Alcohol")
plt.xlabel("Alcohol")
plt.ylabel("Frequency")
plt.show()
plt.figure(figsize=(8,6))
sns.boxplot(x='quality',y='alcohol',data=df)
plt.title("Box plot of Alcohol grouped by Quality")
plt.show()

from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import classification_report,accuracy_score
from sklearn.impute import SimpleImputer
df['quality_label']=df['quality'].apply(lambda x: 1 if x>= 7 else 0)
X=df.drop(columns=['type','quality','quality_label'])
y=df['quality_label']
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)
imputer=SimpleImputer(strategy='mean')
X_train=imputer.fit_transform(X_train)
X_test=imputer.transform(X_test)
nb_model=GaussianNB()
nb_model.fit(X_train,y_train)
y_pred=nb_model.predict(X_test)
accuracy=accuracy_score(y_test,y_pred)
classification_rep=classification_report(y_test,y_pred)
print("Accuracy:{:.2f}%".format(accuracy*100))
print("\nClassification Report:\n",classification_rep)